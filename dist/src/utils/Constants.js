"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.errorEmbed = exports.suggestionSentEmbed = exports.applyTicketButton = exports.normalTicketButton = exports.noPermsEmbed = exports.options = exports.token = void 0;
const discord_js_1 = require("discord.js");
const Config_1 = __importDefault(require("./Config"));
require('dotenv').config({ path: `${__dirname}/../../.env` });
exports.token = process.env.TOKEN;
exports.options = {
    intents: [discord_js_1.Intents.FLAGS.GUILDS, discord_js_1.Intents.FLAGS.GUILD_PRESENCES, discord_js_1.Intents.FLAGS.GUILD_MEMBERS, discord_js_1.Intents.FLAGS.GUILD_MESSAGES, discord_js_1.Intents.FLAGS.GUILD_INTEGRATIONS],
    partials: ["MESSAGE", "CHANNEL", "USER", "GUILD_MEMBER"]
};
exports.noPermsEmbed = new discord_js_1.MessageEmbed()
    .setTitle(":x: | An error ocurred")
    .setDescription(Config_1.default.messages.notEnoughPermissions)
    .setColor("RED")
    .setTimestamp();
exports.normalTicketButton = new discord_js_1.MessageActionRow()
    .addComponents(new discord_js_1.MessageButton()
    .setCustomId('normalTicketBtn')
    .setLabel('Open Support Ticket')
    .setEmoji('üì©')
    .setStyle('PRIMARY'));
exports.applyTicketButton = new discord_js_1.MessageActionRow()
    .addComponents(new discord_js_1.MessageButton()
    .setCustomId('applyTicketBtn')
    .setLabel('Open Apply Ticket')
    .setEmoji("‚ÑπÔ∏è")
    .setStyle("SUCCESS"));
exports.suggestionSentEmbed = new discord_js_1.MessageEmbed()
    .setTitle(":white_check_mark: | Suggestion sent!")
    .setDescription(Config_1.default.messages.suggestionSent)
    .setColor("GREEN")
    .setTimestamp();
exports.errorEmbed = new discord_js_1.MessageEmbed()
    .setTitle(":x: | An error ocurred")
    .setDescription("An error ocurred while executing this command, the error has been informed")
    .setColor("RED")
    .setTimestamp();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL0NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSwyQ0FBbUc7QUFDbkcsc0RBQThCO0FBQzlCLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsR0FBRyxTQUFTLGFBQWEsRUFBRSxDQUFDLENBQUM7QUFFakQsUUFBQSxLQUFLLEdBQVcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUM7QUFDbEMsUUFBQSxPQUFPLEdBQWtCO0lBQ2xDLE9BQU8sRUFBRSxDQUFFLG9CQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxvQkFBTyxDQUFDLEtBQUssQ0FBQyxlQUFlLEVBQUUsb0JBQU8sQ0FBQyxLQUFLLENBQUMsYUFBYSxFQUFFLG9CQUFPLENBQUMsS0FBSyxDQUFDLGNBQWMsRUFBRSxvQkFBTyxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBRTtJQUM3SixRQUFRLEVBQUUsQ0FBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxjQUFjLENBQUU7Q0FDN0QsQ0FBQTtBQUVZLFFBQUEsWUFBWSxHQUFpQixJQUFJLHlCQUFZLEVBQUU7S0FDdkQsUUFBUSxDQUFDLHdCQUF3QixDQUFDO0tBQ2xDLGNBQWMsQ0FBQyxnQkFBTSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQztLQUNwRCxRQUFRLENBQUMsS0FBSyxDQUFDO0tBQ2YsWUFBWSxFQUFFLENBQUM7QUFFUCxRQUFBLGtCQUFrQixHQUFxQixJQUFJLDZCQUFnQixFQUFFO0tBQ3JFLGFBQWEsQ0FDVixJQUFJLDBCQUFhLEVBQUU7S0FDZCxXQUFXLENBQUMsaUJBQWlCLENBQUM7S0FDOUIsUUFBUSxDQUFDLHFCQUFxQixDQUFDO0tBQy9CLFFBQVEsQ0FBQyxJQUFJLENBQUM7S0FDZCxRQUFRLENBQUMsU0FBUyxDQUFDLENBQzNCLENBQUM7QUFFTyxRQUFBLGlCQUFpQixHQUFxQixJQUFJLDZCQUFnQixFQUFFO0tBQ3BFLGFBQWEsQ0FDVixJQUFJLDBCQUFhLEVBQUU7S0FDZCxXQUFXLENBQUMsZ0JBQWdCLENBQUM7S0FDN0IsUUFBUSxDQUFDLG1CQUFtQixDQUFDO0tBQzdCLFFBQVEsQ0FBQyxJQUFJLENBQUM7S0FDZCxRQUFRLENBQUMsU0FBUyxDQUFDLENBQzNCLENBQUM7QUFFTyxRQUFBLG1CQUFtQixHQUFpQixJQUFJLHlCQUFZLEVBQUU7S0FDOUQsUUFBUSxDQUFDLHVDQUF1QyxDQUFDO0tBQ2pELGNBQWMsQ0FBQyxnQkFBTSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUM7S0FDOUMsUUFBUSxDQUFDLE9BQU8sQ0FBQztLQUNqQixZQUFZLEVBQUUsQ0FBQztBQUVQLFFBQUEsVUFBVSxHQUFpQixJQUFJLHlCQUFZLEVBQUU7S0FDckQsUUFBUSxDQUFDLHdCQUF3QixDQUFDO0tBQ2xDLGNBQWMsQ0FBQyw0RUFBNEUsQ0FBQztLQUM1RixRQUFRLENBQUMsS0FBSyxDQUFDO0tBQ2YsWUFBWSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGllbnRPcHRpb25zLCBJbnRlbnRzLCBNZXNzYWdlQWN0aW9uUm93LCBNZXNzYWdlQnV0dG9uLCBNZXNzYWdlRW1iZWQgfSBmcm9tIFwiZGlzY29yZC5qc1wiO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gXCIuL0NvbmZpZ1wiO1xyXG5yZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoeyBwYXRoOiBgJHtfX2Rpcm5hbWV9Ly4uLy4uLy5lbnZgIH0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IHRva2VuOiBzdHJpbmcgPSBwcm9jZXNzLmVudi5UT0tFTjtcclxuZXhwb3J0IGNvbnN0IG9wdGlvbnM6IENsaWVudE9wdGlvbnMgPSB7XHJcbiAgICBpbnRlbnRzOiBbIEludGVudHMuRkxBR1MuR1VJTERTLCBJbnRlbnRzLkZMQUdTLkdVSUxEX1BSRVNFTkNFUywgSW50ZW50cy5GTEFHUy5HVUlMRF9NRU1CRVJTLCBJbnRlbnRzLkZMQUdTLkdVSUxEX01FU1NBR0VTLCBJbnRlbnRzLkZMQUdTLkdVSUxEX0lOVEVHUkFUSU9OUyBdLFxyXG4gICAgcGFydGlhbHM6IFsgXCJNRVNTQUdFXCIsIFwiQ0hBTk5FTFwiLCBcIlVTRVJcIiwgXCJHVUlMRF9NRU1CRVJcIiBdXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBub1Blcm1zRW1iZWQ6IE1lc3NhZ2VFbWJlZCA9IG5ldyBNZXNzYWdlRW1iZWQoKVxyXG4gICAgLnNldFRpdGxlKFwiOng6IHwgQW4gZXJyb3Igb2N1cnJlZFwiKVxyXG4gICAgLnNldERlc2NyaXB0aW9uKGNvbmZpZy5tZXNzYWdlcy5ub3RFbm91Z2hQZXJtaXNzaW9ucylcclxuICAgIC5zZXRDb2xvcihcIlJFRFwiKVxyXG4gICAgLnNldFRpbWVzdGFtcCgpO1xyXG5cclxuZXhwb3J0IGNvbnN0IG5vcm1hbFRpY2tldEJ1dHRvbjogTWVzc2FnZUFjdGlvblJvdyA9IG5ldyBNZXNzYWdlQWN0aW9uUm93KClcclxuICAgIC5hZGRDb21wb25lbnRzKFxyXG4gICAgICAgIG5ldyBNZXNzYWdlQnV0dG9uKClcclxuICAgICAgICAgICAgLnNldEN1c3RvbUlkKCdub3JtYWxUaWNrZXRCdG4nKVxyXG4gICAgICAgICAgICAuc2V0TGFiZWwoJ09wZW4gU3VwcG9ydCBUaWNrZXQnKVxyXG4gICAgICAgICAgICAuc2V0RW1vamkoJ/Cfk6knKVxyXG4gICAgICAgICAgICAuc2V0U3R5bGUoJ1BSSU1BUlknKVxyXG4gICAgKTtcclxuXHJcbmV4cG9ydCBjb25zdCBhcHBseVRpY2tldEJ1dHRvbjogTWVzc2FnZUFjdGlvblJvdyA9IG5ldyBNZXNzYWdlQWN0aW9uUm93KClcclxuICAgIC5hZGRDb21wb25lbnRzKFxyXG4gICAgICAgIG5ldyBNZXNzYWdlQnV0dG9uKClcclxuICAgICAgICAgICAgLnNldEN1c3RvbUlkKCdhcHBseVRpY2tldEJ0bicpXHJcbiAgICAgICAgICAgIC5zZXRMYWJlbCgnT3BlbiBBcHBseSBUaWNrZXQnKVxyXG4gICAgICAgICAgICAuc2V0RW1vamkoXCLihLnvuI9cIilcclxuICAgICAgICAgICAgLnNldFN0eWxlKFwiU1VDQ0VTU1wiKVxyXG4gICAgKTtcclxuXHJcbmV4cG9ydCBjb25zdCBzdWdnZXN0aW9uU2VudEVtYmVkOiBNZXNzYWdlRW1iZWQgPSBuZXcgTWVzc2FnZUVtYmVkKClcclxuICAgIC5zZXRUaXRsZShcIjp3aGl0ZV9jaGVja19tYXJrOiB8IFN1Z2dlc3Rpb24gc2VudCFcIilcclxuICAgIC5zZXREZXNjcmlwdGlvbihjb25maWcubWVzc2FnZXMuc3VnZ2VzdGlvblNlbnQpXHJcbiAgICAuc2V0Q29sb3IoXCJHUkVFTlwiKVxyXG4gICAgLnNldFRpbWVzdGFtcCgpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGVycm9yRW1iZWQ6IE1lc3NhZ2VFbWJlZCA9IG5ldyBNZXNzYWdlRW1iZWQoKVxyXG4gICAgLnNldFRpdGxlKFwiOng6IHwgQW4gZXJyb3Igb2N1cnJlZFwiKVxyXG4gICAgLnNldERlc2NyaXB0aW9uKFwiQW4gZXJyb3Igb2N1cnJlZCB3aGlsZSBleGVjdXRpbmcgdGhpcyBjb21tYW5kLCB0aGUgZXJyb3IgaGFzIGJlZW4gaW5mb3JtZWRcIilcclxuICAgIC5zZXRDb2xvcihcIlJFRFwiKVxyXG4gICAgLnNldFRpbWVzdGFtcCgpOyJdfQ==